name: Deploy Flask App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
      IMAGE_NAME: flask-app

    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo 2: Configurar o Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      # Passo 3: Instalar dependências
      - name: Install dependencies
        run: pip install -r src/requirements.txt

      # Passo 4: Instalar humctl
      - name: Install humctl
        run: |
          curl -Lo humctl https://github.com/humanitec/cli/releases/latest/download/humctl-linux-amd64
          chmod +x humctl
          sudo mv humctl /usr/local/bin/

      # Passo 5: Login no Azure Container Registry (ACR)
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Passo 6: Build da imagem Docker
      - name: Build Docker Image
        run: docker build -t ${{ env.AZURE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .

      # Passo 7: Push da imagem para o ACR
      - name: Push Docker Image to ACR
        run: docker push ${{ env.AZURE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Passo 8: Login no Humanitec
      - name: Login to Humanitec
        run: humctl login --token ${{ secrets.HUMANITEC_API_TOKEN }}

      # Passo 9: Atualizar o arquivo score.yaml com a nova imagem
      - name: Update Score file
        run: |
          sed -i 's|image: .*|image: '"${{ env.AZURE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"'|' score.yaml

      # Passo 10: Validar o Score file
      - name: Validate Score file
        run: humctl score validate

      # Passo 11: Fazer o deploy usando Humanitec
      - name: Deploy using Humanitec
        run: humctl score deploy --wait --app api-flask --env development
