name: Deploy Flask App to Humanitec

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
      IMAGE_NAME: flask-app
      HUMANITEC_API_TOKEN: ${{ secrets.HUMANITEC_API_TOKEN }}

    steps:
      # Step 1: Checkout do repositório
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Instalar o Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      # Step 3: Instalar dependências do Python
      - name: Install dependencies
        run: pip install -r src/requirements.txt

      # Step 4: Login no Azure Container Registry (ACR)
      - name: Login to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} \
          --username ${{ secrets.ACR_USERNAME }} --password-stdin

      # Step 5: Build da imagem Docker
      - name: Build Docker image
        run: docker build -t $AZURE_REGISTRY/$IMAGE_NAME:latest .

      # Step 6: Push da imagem Docker para o ACR
      - name: Push Docker image to Azure Container Registry
        run: docker push $AZURE_REGISTRY/$IMAGE_NAME:latest

      # Step 7: Instalar o humctl CLI mais recente
      - name: Install humctl
        run: |
          curl -fLO https://github.com/humanitec/cli/releases/latest/download/humctl-linux-amd64
          chmod +x humctl-linux-amd64
          sudo mv humctl-linux-amd64 /usr/local/bin/humctl
          humctl version

      # Step 7.1: Limpar tokens cacheados
      - name: Clear cached humctl credentials
        run: humctl logout || true

      # Step 8: Login no Humanitec usando o token
      - name: Login to Humanitec
        run: humctl login --token ${{ secrets.HUMANITEC_API_TOKEN }}

      # Step 8.1: Verificar login
      - name: Verify Humanitec login
        run: humctl config --show

      # Step 9: Validar o arquivo Score antes do deploy
      - name: Validate Score file
        run: humctl score validate --org labcle --app api-flask --env development

      # Step 10: Realizar o deploy usando Humanitec
      - name: Deploy using Humanitec
        run: |
          GIT_COMMIT=$(git rev-parse --short HEAD)
          humctl score deploy --wait --org labcle --app api-flask --env development \
            --property containers.api-flask.image=$AZURE_REGISTRY/$IMAGE_NAME:$GIT_COMMIT
