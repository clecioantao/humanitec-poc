name: Deploy Flask App to Humanitec

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
      IMAGE_NAME: flask-app
      HUMANITEC_API_TOKEN: ${{ secrets.HUMANITEC_API_TOKEN }}

    steps:
      # Step 1: Checkout do repositório
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Instalar o Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      # Step 3: Instalar dependências do Python
      - name: Install dependencies
        run: |
          pip install -r src/requirements.txt

      # Step 4: Login no Azure Container Registry (ACR)
      - name: Login to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} \
          --username ${{ secrets.ACR_USERNAME }} --password-stdin

      # Step 5: Build da imagem Docker com tag única
      - name: Build Docker image
        run: |
          GIT_COMMIT=$(git rev-parse --short HEAD)
          docker build --no-cache -t $AZURE_REGISTRY/$IMAGE_NAME:$GIT_COMMIT .
          docker tag $AZURE_REGISTRY/$IMAGE_NAME:$GIT_COMMIT $AZURE_REGISTRY/$IMAGE_NAME:latest

      # Step 6: Push da imagem Docker para o ACR
      - name: Push Docker image to Azure Container Registry
        run: |
          GIT_COMMIT=$(git rev-parse --short HEAD)
          docker push $AZURE_REGISTRY/$IMAGE_NAME:$GIT_COMMIT
          docker push $AZURE_REGISTRY/$IMAGE_NAME:latest

      # Step 7: Realizar o deploy usando a API do Humanitec
      - name: Deploy using Humanitec API
        run: |
          GIT_COMMIT=$(git rev-parse --short HEAD)
          echo "Iniciando o deploy via API do Humanitec..."
          curl -X POST "https://api.humanitec.io/orgs/labcle/apps/api-flask/envs/development/deltas" \
            -H "Authorization: Bearer $HUMANITEC_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "values": {
                "containers.api-flask.image": "'$AZURE_REGISTRY/$IMAGE_NAME:$GIT_COMMIT'"
              },
              "metadata": {
                "message": "Deploy via GitHub Actions"
              }
            }'
          
      # Step 8: Listar imagens no ACR para verificação
      - name: List images in ACR for verification
        run: |
          echo "Listing images in ACR for verification..."
          az acr repository show-tags --name ${{ secrets.ACR_LOGIN_SERVER }} --repository $IMAGE_NAME
          az acr repository show-manifests --name ${{ secrets.ACR_LOGIN_SERVER }} --repository $IMAGE_NAME
