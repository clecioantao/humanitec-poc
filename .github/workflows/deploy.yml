name: Deploy to Humanitec

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init and Apply
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      run: |
        cd terraform
        terraform init
        terraform apply -auto-approve

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t myapp:${{ github.sha }} .

    - name: Push Docker image to ACR
      env:
        ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
        ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
        ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
      run: |
        docker login ${{ env.ACR_LOGIN_SERVER }} -u ${{ env.ACR_USERNAME }} -p ${{ env.ACR_PASSWORD }}
        docker tag myapp:${{ github.sha }} ${{ env.ACR_LOGIN_SERVER }}/myapp:${{ github.sha }}
        docker push ${{ env.ACR_LOGIN_SERVER }}/myapp:${{ github.sha }}

    - name: Deploy to Humanitec
      env:
        HUMANITEC_API_TOKEN: ${{ secrets.HUMANITEC_API_TOKEN }}
        HUMANITEC_APP_ID: "humanitec-poc"
      run: |
        curl -X POST https://api.humanitec.io/v2/applications/${{ env.HUMANITEC_APP_ID }}/deploys \
          -H "Authorization: Bearer ${{ env.HUMANITEC_API_TOKEN }}" \
          -d '{"module": "myapp", "image": "'"${{ env.ACR_LOGIN_SERVER }}/myapp:${{ github.sha }}"'"}'
